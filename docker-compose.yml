version: "3"
services:
  postgres:
    image: postgres
    container_name: postgres_notification_service
    restart: always
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Password2025"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/docker-entrypoint-initdb.d
      - habrdb-data:/var/lib/postgresql/data
    networks:
      - dnet
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis_notification_service
    restart: always
    networks:
      - dnet
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s
      
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_notification_service
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - dnet
 
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_notification_service
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - dnet
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s
      
      
  notification_service:
    image: cherepmd/notification_service
    container_name: notification_service
    restart: always
    networks:
      - dnet
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
        
  sending_message_service:
    image: cherepmd/sending_message_service
    container_name: sending_message_service
    restart: always
    networks:
      - dnet
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
        
  manager_web_pages_service:
    image: cherepmd/manager_web_pages_service
    container_name: manager_web_pages_service
    restart: always
    networks:
      - dnet
    ports:
      - "8082:8082"
    depends_on:
      notification_service:
        condition: service_started
        
  notification_telegram_sender:
    image: cherepmd/notification_telegram_sender
    container_name: notification_telegram_sender
    restart: always
    networks:
      - dnet
    depends_on:
      sending_message_service:
        condition: service_started
      redis:
        condition: service_healthy
        
  notification_email_sender:
    image: cherepmd/notification_email_sender
    container_name: notification_email_sender
    restart: always
    networks:
      - dnet
    depends_on:
      sending_message_service:
        condition: service_started

volumes:
  habrdb-data:
  redis_data:
  
networks:
  dnet:
    name: dnet
    external: true
